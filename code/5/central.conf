# From The Logstash Book
# The original of this file can be found at: http://logstashbook.com/code/index.html
#
input {
      beats {
        port => 5044
      }
}
filter {
  if [type] == "postfix" {
    grok {
      patterns_dir => ["/etc/logstash/patterns"]
      match => [ "message", "%{POSTFIX}" ]
      add_tag => [ "postfix", "grokked", "%{component}" ]
    }
    if "qmgr" in [tags] {
      grok {
        patterns_dir => ["/etc/logstash/patterns"]
        match => [ "message", "%{POSTFIXQMGR}" ]
      }
    }
    date {
      match => [ "timestamp", "MMM dd HH:mm:ss", "MMM  d HH:mm:ss" ]
      add_tag => [ "dated" ]
    }
  }
  if [type] == "tomcat" and [message] !~ /(.+)/ {
    drop { }
  }
  if [type] == "tomcat" and "multiline" in [tags] {
    grok {
      match => [ "message", "%{JAVASTACKTRACEPART}" ]
    }
  }
  if [type] == "alpha" {
    grok {
      match => [ "message", "(?<timestamp>[\d]+)\+(?<tz>[\w]{4})\s(?<msg>.*)\s%{UNIXPATH:file}\#%{POSINT:line}\s%{GREEDYDATA:id}\s%{WORD:appname}\/(?<appver>[\d.\d.\d\w]+)\/(?<apprelease>[\w\s]+)" ]
      add_tag => [ "grokked" ]
    }
    date {
      match => [ "timestamp", "UNIX" ]
      timezone => tz
      add_tag => [ "dated" ]
    }
    if [apprelease] == "QA Release" {
      mutate {
        add_field => [ "environment", "qa" ]
      }
    }
    else {
      mutate {
        add_field => [ "environment", "production" ]
      }
    }
    mutate {
      convert => [ "line", "integer" ]
    }
  }
}
output {
      stdout { }
      elasticsearch {
        cluster => "logstash"
      }
}
